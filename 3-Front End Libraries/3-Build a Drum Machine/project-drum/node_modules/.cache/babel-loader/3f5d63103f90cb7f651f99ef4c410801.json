{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learn\\\\FreeCodeAcademy\\\\3-Front End Libraries\\\\4-Build a Javascript Calculator\\\\local-vscode\\\\JS Calc\\\\js-calc\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nconst regexOperator = /[*/+-]/;\nconst regexNumberOperator = /((\\d*\\.\\d+)|(\\d+)|([+\\-*/()]))/g;\nconst regexEndsWithOperator = /[*/+-]$/;\n\nconst KeyPad = props => {\n  return React.createElement(\"div\", {\n    id: props.idValue,\n    className: \"key-pad\",\n    onClick: props.click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.displayValue);\n};\n\nconst KeyBank = props => {\n  const calcButtons = props.calckeys.map(k => React.createElement(KeyPad, {\n    key: k.id,\n    displayValue: k.display,\n    idValue: k.id,\n    click: props.click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"pad-bank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, calcButtons);\n};\n\nconst DisplayFormula = props => {\n  return React.createElement(\"div\", {\n    id: \"displayFormula\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.showFormula);\n};\n\nconst DisplayResult = props => {\n  return React.createElement(\"div\", {\n    id: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.showResult);\n};\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calckeys: calcElements,\n      displayFormula: \"\",\n      prevClicked: \"0\",\n      currentClicked: \"0\",\n      problemSolved: false,\n      test: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.calculate = this.calculate.bind(this);\n  }\n\n  calculate(mathProblem) {\n    console.log(\"mathProblem \" + mathProblem);\n    const numberOperaterArray = mathProblem.match(regexNumberOperator);\n    console.log(numberOperaterArray); // eslint-disable-next-line\n\n    let answer = Math.round(1000000000000 * eval(mathProblem)) / 1000000000000;\n    console.log(answer, this.state.currentClicked);\n    return answer;\n  }\n\n  handleClick(e) {\n    //--------------CLEAR-----------------------\n    if (e.target.id === \"clear\") {\n      this.setState({\n        displayFormula: \"\",\n        prevClicked: \"0\",\n        currentClicked: \"0\",\n        problemSolved: false,\n        test: \"CLEAR\"\n      }); //------------OPERATOR------------------------\n    } else if (e.target.id === \"divide\" || e.target.id === \"multiply\" || e.target.id === \"add\" || e.target.id === \"subtract\") {\n      this.setState({\n        currentClicked: e.target.innerText,\n        problemSolved: false,\n        test: \"OP1\"\n      });\n\n      if (this.state.displayFormula.includes('=')) {\n        this.setState({\n          displayFormula: this.state.prevClicked + e.target.innerText,\n          test: \"OP2\"\n        });\n      } else {\n        this.setState({\n          prevClicked: !regexOperator.test(this.state.currentClicked) ? this.state.displayFormula : this.state.prevClicked,\n          displayFormula: !regexOperator.test(this.state.currentClicked) ? // eslint-disable-next-line\n          this.state.displayFormula += e.target.innerText : this.state.prevClicked += e.target.innerText,\n          test: \"OP3\"\n        });\n      } //-------------DECIMAL------------------------\n\n    } else if (e.target.id === \"decimal\") {\n      if (this.state.problemSolved === true) {\n        this.setState({\n          currentClicked: '0.',\n          displayFormula: '0.',\n          problemSolved: false,\n          test: \"DECRESET\"\n        });\n      } else if (!this.state.currentClicked.includes('.')) {\n        this.setState({\n          problemSolved: false\n        });\n\n        if (regexEndsWithOperator.test(this.state.displayFormula) || this.state.currentClicked === '0' && this.state.displayFormula === '') {\n          this.setState({\n            currentClicked: '0.',\n            displayFormula: this.state.displayFormula + '0.',\n            test: \"DEC1\"\n          });\n        } else {\n          this.setState({\n            currentClicked: this.state.displayFormula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\n            displayFormula: this.state.displayFormula + '.',\n            test: \"DEC2\"\n          });\n        }\n      } //------------EQUALS-------------------------\n\n    } else if (e.target.id === \"equals\" && this.state.problemSolved === false) {\n      if (regexEndsWithOperator.test(this.state.displayFormula)) {\n        this.setState({\n          displayFormula: this.state.displayFormula.slice(0, -1),\n          test: \"EQ1\"\n        });\n      }\n\n      var problemResult = this.calculate(this.state.displayFormula);\n      this.setState({\n        currentClicked: problemResult,\n        prevClicked: problemResult,\n        displayFormula: this.state.displayFormula + \"=\" + problemResult,\n        problemSolved: true,\n        test: \"EQ2\"\n      }); //--------------NUMBERS-----------------------\n    } else {\n      if (this.state.problemSolved === true) {\n        this.setState({\n          currentClicked: e.target.innerText,\n          displayFormula: e.target.innerText !== '0' ? e.target.innerText : '',\n          test: \"NUM1\"\n        });\n      } else {\n        this.setState({\n          currentClicked: this.state.currentClicked === '0' || regexOperator.test(this.state.currentClicked) ? e.target.innerText : this.state.currentClicked + e.target.innerText,\n          test: \"NUM3\",\n          displayFormula: this.state.currentClicked === '0' && e.target.innerText === '0' ? this.state.displayFormula : /([^.0-9]0)$/.test(this.state.displayFormula) ? this.state.displayFormula.slice(0, -1) + e.target.innerText : this.state.displayFormula + e.target.innerText\n        });\n      }\n    }\n  }\n\n  render() {\n    const calcButtons = this.state.calckeys.map(k => React.createElement(\"div\", {\n      key: k.id,\n      displayValue: k.display,\n      id: k.id,\n      onClick: this.handleClick,\n      className: \"key-pad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, k.display));\n    return React.createElement(\"div\", {\n      id: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(DisplayFormula, {\n      showFormula: this.state.displayFormula,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(DisplayResult, {\n      showResult: this.state.currentClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      displayValue: \"AC\",\n      id: \"clear\",\n      onClick: this.handleClick,\n      className: \"key-pad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, k.display));\n  }\n\n}\n\nconst calcElements = [{\n  display: \"AC\",\n  id: \"clear\"\n}, {\n  display: \"/\",\n  id: \"divide\"\n}, {\n  display: \"*\",\n  id: \"multiply\"\n}, {\n  display: \"-\",\n  id: \"subtract\"\n}, {\n  display: \"+\",\n  id: \"add\"\n}, {\n  display: \"=\",\n  id: \"equals\"\n}, {\n  display: \".\",\n  id: \"decimal\"\n}, {\n  display: 0,\n  id: \"zero\"\n}, {\n  display: 1,\n  id: \"one\"\n}, {\n  display: 2,\n  id: \"two\"\n}, {\n  display: 3,\n  id: \"three\"\n}, {\n  display: 4,\n  id: \"four\"\n}, {\n  display: 5,\n  id: \"five\"\n}, {\n  display: 6,\n  id: \"six\"\n}, {\n  display: 7,\n  id: \"seven\"\n}, {\n  display: 8,\n  id: \"eight\"\n}, {\n  display: 9,\n  id: \"nine\"\n}];\nexport default Calculator; //ReactDOM.render(<Calculator />, document.getElementById(\"root\"));","map":{"version":3,"sources":["C:\\Learn\\FreeCodeAcademy\\3-Front End Libraries\\4-Build a Javascript Calculator\\local-vscode\\JS Calc\\js-calc\\src\\App.js"],"names":["React","regexOperator","regexNumberOperator","regexEndsWithOperator","KeyPad","props","idValue","click","displayValue","KeyBank","calcButtons","calckeys","map","k","id","display","DisplayFormula","showFormula","DisplayResult","showResult","Calculator","Component","constructor","state","calcElements","displayFormula","prevClicked","currentClicked","problemSolved","test","handleClick","bind","calculate","mathProblem","console","log","numberOperaterArray","match","answer","Math","round","eval","e","target","setState","innerText","includes","slice","problemResult","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst regexOperator = /[*/+-]/;\nconst regexNumberOperator = /((\\d*\\.\\d+)|(\\d+)|([+\\-*/()]))/g;\nconst regexEndsWithOperator = /[*/+-]$/;\n\nconst KeyPad = props => {\n  return (\n    <div id={props.idValue} className=\"key-pad\" onClick={props.click}>\n      {props.displayValue}\n    </div>\n  );\n};\n\nconst KeyBank = props => {\n  const calcButtons = props.calckeys.map(k => (\n    <KeyPad key={k.id}\n      displayValue={k.display}\n      idValue={k.id}\n      click={props.click}\n    />\n  ));\n  return <div className=\"pad-bank\">{calcButtons}</div>;\n};\n\nconst DisplayFormula = props => {\n  return <div id=\"displayFormula\">{props.showFormula}</div>;\n};\n\nconst DisplayResult = props => {\n  return <div id=\"display\">{props.showResult}</div>;\n};\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calckeys: calcElements,\n      displayFormula: \"\",\n      prevClicked: \"0\",\n      currentClicked: \"0\",\n      problemSolved: false,\n      test: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.calculate = this.calculate.bind(this);\n  }\n\n  calculate(mathProblem) {\n    console.log(\"mathProblem \" + mathProblem);\n\n    const numberOperaterArray = mathProblem.match(regexNumberOperator);\n    console.log(numberOperaterArray);\n\n    // eslint-disable-next-line\n    let answer = Math.round(1000000000000 * eval(mathProblem)) / 1000000000000;\n    console.log(answer, this.state.currentClicked);\n    return answer;\n  }\n\n  handleClick(e) {\n    //--------------CLEAR-----------------------\n    if (e.target.id === \"clear\") {\n      this.setState({\n        displayFormula: \"\",\n        prevClicked: \"0\",\n        currentClicked: \"0\",\n        problemSolved: false,\n        test: \"CLEAR\"\n      });\n\n      //------------OPERATOR------------------------\n    } else if (e.target.id === \"divide\"\n      || e.target.id === \"multiply\"\n      || e.target.id === \"add\"\n      || e.target.id === \"subtract\") {\n      this.setState({\n        currentClicked: e.target.innerText,\n        problemSolved: false,\n        test: \"OP1\"\n      });\n      if (this.state.displayFormula.includes('=')) {\n        this.setState({ displayFormula: this.state.prevClicked + e.target.innerText, test: \"OP2\" });\n      } else {\n        this.setState({\n          prevClicked: !regexOperator.test(this.state.currentClicked) ?\n            this.state.displayFormula : this.state.prevClicked,\n          displayFormula: !regexOperator.test(this.state.currentClicked) ?\n            // eslint-disable-next-line\n            this.state.displayFormula += e.target.innerText : this.state.prevClicked += e.target.innerText,\n          test: \"OP3\"\n        });\n      }\n\n      //-------------DECIMAL------------------------\n    } else if (e.target.id === \"decimal\") {\n      if (this.state.problemSolved === true) {\n        this.setState({\n          currentClicked: '0.',\n          displayFormula: '0.',\n          problemSolved: false,\n          test: \"DECRESET\"\n        });\n      } else if (!this.state.currentClicked.includes('.')) {\n        this.setState({ problemSolved: false })\n        if (regexEndsWithOperator.test(this.state.displayFormula) || (this.state.currentClicked === '0' && this.state.displayFormula === '')) {\n          this.setState({\n            currentClicked: '0.',\n            displayFormula: this.state.displayFormula + '0.',\n            test: \"DEC1\"\n          });\n        } else {\n          this.setState({\n            currentClicked: this.state.displayFormula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\n            displayFormula: this.state.displayFormula + '.',\n            test: \"DEC2\"\n          });\n        }\n      }\n      //------------EQUALS-------------------------\n    } else if (e.target.id === \"equals\" && this.state.problemSolved === false) {\n      if (regexEndsWithOperator.test(this.state.displayFormula)) {\n        this.setState({\n          displayFormula: this.state.displayFormula.slice(0, -1),\n          test: \"EQ1\"\n        });\n      }\n      var problemResult = this.calculate(this.state.displayFormula);\n      this.setState({\n        currentClicked: problemResult,\n        prevClicked: problemResult,\n        displayFormula: this.state.displayFormula + \"=\" + problemResult,\n        problemSolved: true,\n        test: \"EQ2\"\n      });\n      //--------------NUMBERS-----------------------\n    } else {\n      if (this.state.problemSolved === true) {\n        this.setState({\n          currentClicked: e.target.innerText,\n          displayFormula: e.target.innerText !== '0' ? e.target.innerText : '',\n          test: \"NUM1\"\n        });\n      } else {\n        this.setState({\n          currentClicked:\n            this.state.currentClicked === '0' || regexOperator.test(this.state.currentClicked) ?\n              e.target.innerText : this.state.currentClicked + e.target.innerText,\n          test: \"NUM3\",\n          displayFormula:\n            this.state.currentClicked === '0' && e.target.innerText === '0' ?\n              this.state.displayFormula :\n              /([^.0-9]0)$/.test(this.state.displayFormula) ?\n                this.state.displayFormula.slice(0, -1) + e.target.innerText :\n                this.state.displayFormula + e.target.innerText,\n        });\n      }\n    }\n  }\n\n  render() {\n    const calcButtons = this.state.calckeys.map(k => (\n      <div key={k.id}\n        displayValue={k.display}\n        id={k.id}\n        onClick={this.handleClick}\n        className=\"key-pad\"\n      >{k.display}</div>\n    ));\n    return (\n      <div id=\"app-container\">\n        <DisplayFormula showFormula={this.state.displayFormula} />\n        <DisplayResult showResult={this.state.currentClicked} />\n        <div displayValue=\"AC\" id=\"clear\" onClick={this.handleClick} className=\"key-pad\" >{k.display}</div>\n      </div>\n    );\n  }\n}\n\nconst calcElements = [\n  {\n    display: \"AC\",\n    id: \"clear\"\n  },\n  {\n    display: \"/\",\n    id: \"divide\"\n  },\n  {\n    display: \"*\",\n    id: \"multiply\"\n  },\n  {\n    display: \"-\",\n    id: \"subtract\"\n  },\n  {\n    display: \"+\",\n    id: \"add\"\n  },\n  {\n    display: \"=\",\n    id: \"equals\"\n  },\n  {\n    display: \".\",\n    id: \"decimal\"\n  },\n  {\n    display: 0,\n    id: \"zero\"\n  },\n  {\n    display: 1,\n    id: \"one\"\n  },\n  {\n    display: 2,\n    id: \"two\"\n  },\n  {\n    display: 3,\n    id: \"three\"\n  },\n  {\n    display: 4,\n    id: \"four\"\n  },\n  {\n    display: 5,\n    id: \"five\"\n  },\n  {\n    display: 6,\n    id: \"six\"\n  },\n  {\n    display: 7,\n    id: \"seven\"\n  },\n  {\n    display: 8,\n    id: \"eight\"\n  },\n  {\n    display: 9,\n    id: \"nine\"\n  }\n];\n\nexport default Calculator;\n//ReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Learn\\\\FreeCodeAcademy\\\\3-Front End Libraries\\\\JS Calc\\\\js-calc\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css'; //const regexNumbers = /\\d+/g;\n\nconst regexOperator = /[+\\-*=]/g;\nconst regexNumberOperator = /((\\d*\\.\\d+)|(\\d+)|([+\\-*/()]))/g; //const regexLeadingZero = /^0+/g;\n\nconst regexEndsWithOperator = /[x+â€‘/]$/;\n\nconst KeyPad = props => {\n  return React.createElement(\"div\", {\n    id: props.idValue,\n    className: \"key-pad\",\n    onClick: props.click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.displayValue);\n};\n\nconst KeyBank = props => {\n  const calcButtons = props.calckeys.map(k => React.createElement(KeyPad, {\n    key: k.id,\n    operatorValue: k.operator,\n    displayValue: k.display,\n    idValue: k.id,\n    click: props.click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"pad-bank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, calcButtons);\n};\n\nconst DisplayFormula = props => {\n  return React.createElement(\"div\", {\n    id: \"displayFormula\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.showFormula);\n};\n\nconst DisplayResult = props => {\n  return React.createElement(\"div\", {\n    id: \"display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.showResult);\n};\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calckeys: calcElements,\n      displayFormula: \"\",\n      displayResult: \"0\",\n      prevClicked: \"0\",\n      currentClicked: \"0\",\n      test: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.calculate = this.calculate.bind(this);\n  }\n\n  calculate(mathProblem) {\n    console.log(\"mathProblem \" + mathProblem); //const regexNumbers = /\\d+/g;\n    //const regexOperator = /\\+|-|\\*|\\/|=/g;\n\n    const numberOperaterArray = mathProblem.match(regexNumberOperator);\n    console.log(numberOperaterArray); //const divideOperator = numberOperaterArray.indexOf(\"/\");\n    //const multiplyOperator = numberOperaterArray.indexOf(\"*\");\n    //const plusOperator = numberOperaterArray.indexOf(\"+\");\n    //const subtractOperator = numberOperaterArray.indexOf(\"-\");\n    // eslint-disable-next-line\n\n    let answer = Math.round(1000000000000 * eval(mathProblem)) / 1000000000000;\n    console.log(answer, this.state.displayResult);\n    return answer;\n  }\n\n  handleClick(e) {\n    //--------------CLEAR-----------------------\n    if (e.target.id === \"clear\") {\n      this.setState({\n        displayFormula: \"\",\n        displayResult: \"0\",\n        prevClicked: \"0\",\n        currentClicked: \"0\",\n        test: \"CLEAR\"\n      }); //-------------DECIMAL------------------------\n    } else if (e.target.id === \"decimal\") {\n      if (regexEndsWithOperator.test(this.state.displayResult)) {\n        this.setState({\n          prevClicked: 0,\n          displayResult: this.state.displayResult + \"0.\" + e.target.innerText\n        });\n      } else {\n        this.setState({\n          prevClicked: e.target.innerText,\n          displayResult: this.state.displayResult + \"0.\" + e.target.innerText\n        });\n      } //------------EQUALS-------------------------\n\n    } else if (e.target.id === \"equals\") {\n      var problemResult = this.calculate(this.state.displayFormula);\n      this.setState({\n        currentClicked: problemResult,\n        prevClicked: e.target.innerText,\n        displayFormula: this.state.displayFormula + \"=\" + problemResult\n      }); //--------------NUMBERS-----------------------\n    } else {\n      this.setState({\n        displayResult: this.state.displayResult + e.target.innerText,\n        currentClicked: this.state.currentClicked === '0' || regexOperator.test(this.state.currentClicked) ? e.target.innerText : this.state.currentClicked + e.target.innerText,\n        displayFormula: this.state.currentClicked === '0' && e.target.innerText === '0' ? this.state.displayFormula : /([^.0-9]0)$/.test(this.state.displayFormula) ? this.state.displayFormula.slice(0, -1) + e.target.innerText : this.state.displayFormula + e.target.innerText\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"displayResult: \", this.state.displayResult, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \"currentClicked: \", this.state.currentClicked, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), \"DisplayFormula: \", this.state.displayFormula, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), \"test: \", this.state.test), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Calculator\"), React.createElement(DisplayFormula, {\n      showFormula: this.state.displayFormula,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(DisplayResult, {\n      showResult: this.state.currentClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(KeyBank, {\n      calckeys: this.state.calckeys,\n      click: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst calcElements = [{\n  operator: \"AC\",\n  display: \"AC\",\n  id: \"clear\"\n}, {\n  operator: \"\\u00F7\",\n  display: \"/\",\n  id: \"divide\"\n}, {\n  operator: \"\\u00d7\",\n  display: \"*\",\n  id: \"multiply\"\n}, {\n  operator: \"-\",\n  display: \"-\",\n  id: \"subtract\"\n}, {\n  operator: \"+\",\n  display: \"+\",\n  id: \"add\"\n}, {\n  operator: \"=\",\n  display: \"=\",\n  id: \"equals\"\n}, {\n  operator: \".\",\n  display: \".\",\n  id: \"decimal\"\n}, {\n  operator: 0,\n  display: 0,\n  id: \"zero\"\n}, {\n  operator: 1,\n  display: 1,\n  id: \"one\"\n}, {\n  operator: 2,\n  display: 2,\n  id: \"two\"\n}, {\n  operator: 3,\n  display: 3,\n  id: \"three\"\n}, {\n  operator: 4,\n  display: 4,\n  id: \"four\"\n}, {\n  operator: 5,\n  display: 5,\n  id: \"five\"\n}, {\n  operator: 6,\n  display: 6,\n  id: \"six\"\n}, {\n  operator: 7,\n  display: 7,\n  id: \"seven\"\n}, {\n  operator: 8,\n  display: 8,\n  id: \"eight\"\n}, {\n  operator: 9,\n  display: 9,\n  id: \"nine\"\n}];\nexport default Calculator;","map":{"version":3,"sources":["C:\\Learn\\FreeCodeAcademy\\3-Front End Libraries\\JS Calc\\js-calc\\src\\App.js"],"names":["React","regexOperator","regexNumberOperator","regexEndsWithOperator","KeyPad","props","idValue","click","displayValue","KeyBank","calcButtons","calckeys","map","k","id","operator","display","DisplayFormula","showFormula","DisplayResult","showResult","Calculator","Component","constructor","state","calcElements","displayFormula","displayResult","prevClicked","currentClicked","test","handleClick","bind","calculate","mathProblem","console","log","numberOperaterArray","match","answer","Math","round","eval","e","target","setState","innerText","problemResult","slice","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,aAAa,GAAG,UAAtB;AACA,MAAMC,mBAAmB,GAAG,iCAA5B,C,CACA;;AACA,MAAMC,qBAAqB,GAAG,SAA9B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,SACE;AAAK,IAAA,EAAE,EAAEA,KAAK,CAACC,OAAf;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAED,KAAK,CAACE,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,YADT,CADF;AAKD,CAND;;AAQA,MAAMC,OAAO,GAAGJ,KAAK,IAAI;AACvB,QAAMK,WAAW,GAAGL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBC,CAAC,IACtC,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAf;AACE,IAAA,aAAa,EAAED,CAAC,CAACE,QADnB;AAEE,IAAA,YAAY,EAAEF,CAAC,CAACG,OAFlB;AAGE,IAAA,OAAO,EAAEH,CAAC,CAACC,EAHb;AAIE,IAAA,KAAK,EAAET,KAAK,CAACE,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,CAApB;AAQA,SAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BG,WAA3B,CAAP;AACD,CAVD;;AAYA,MAAMO,cAAc,GAAGZ,KAAK,IAAI;AAC9B,SAAO;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,KAAK,CAACa,WAAhC,CAAP;AACD,CAFD;;AAIA,MAAMC,aAAa,GAAGd,KAAK,IAAI;AAC7B,SAAO;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAK,CAACe,UAAzB,CAAP;AACD,CAFD;;AAMA,MAAMC,UAAN,SAAyBrB,KAAK,CAACsB,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAAClB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKmB,KAAL,GAAa;AACXb,MAAAA,QAAQ,EAAEc,YADC;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,aAAa,EAAE,GAHJ;AAIXC,MAAAA,WAAW,EAAE,GAJF;AAKXC,MAAAA,cAAc,EAAE,GALL;AAMXC,MAAAA,IAAI,EAAE;AANK,KAAb;AAQA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDC,EAAAA,SAAS,CAACC,WAAD,EAAc;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,WAA7B,EADqB,CAErB;AACA;;AAEA,UAAMG,mBAAmB,GAAGH,WAAW,CAACI,KAAZ,CAAkBpC,mBAAlB,CAA5B;AACAiC,IAAAA,OAAO,CAACC,GAAR,CAAYC,mBAAZ,EANqB,CAQrB;AACA;AACA;AACA;AAEA;;AACA,QAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,gBAAgBC,IAAI,CAACR,WAAD,CAA/B,IAAgD,aAA7D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ,EAAoB,KAAKf,KAAL,CAAWG,aAA/B;AACA,WAAOY,MAAP;AACD;;AAEDR,EAAAA,WAAW,CAACY,CAAD,EAAI;AACb;AACA,QAAIA,CAAC,CAACC,MAAF,CAAS9B,EAAT,KAAgB,OAApB,EAA6B;AAC3B,WAAK+B,QAAL,CAAc;AACZnB,QAAAA,cAAc,EAAE,EADJ;AAEZC,QAAAA,aAAa,EAAE,GAFH;AAGZC,QAAAA,WAAW,EAAE,GAHD;AAIZC,QAAAA,cAAc,EAAE,GAJJ;AAKZC,QAAAA,IAAI,EAAE;AALM,OAAd,EAD2B,CAQ3B;AACD,KATD,MASO,IAAIa,CAAC,CAACC,MAAF,CAAS9B,EAAT,KAAgB,SAApB,EAA+B;AACpC,UAAIX,qBAAqB,CAAC2B,IAAtB,CAA2B,KAAKN,KAAL,CAAWG,aAAtC,CAAJ,EAA0D;AACxD,aAAKkB,QAAL,CAAc;AACZjB,UAAAA,WAAW,EAAE,CADD;AAEZD,UAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,GAA2B,IAA3B,GAAkCgB,CAAC,CAACC,MAAF,CAASE;AAF9C,SAAd;AAID,OALD,MAKO;AACL,aAAKD,QAAL,CAAc;AACZjB,UAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASE,SADV;AAEZnB,UAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,GAA2B,IAA3B,GAAkCgB,CAAC,CAACC,MAAF,CAASE;AAF9C,SAAd;AAID,OAXmC,CAYpC;;AACD,KAbM,MAaA,IAAIH,CAAC,CAACC,MAAF,CAAS9B,EAAT,KAAgB,QAApB,EAA8B;AACnC,UAAIiC,aAAa,GAAG,KAAKd,SAAL,CAAe,KAAKT,KAAL,CAAWE,cAA1B,CAApB;AACA,WAAKmB,QAAL,CAAc;AACZhB,QAAAA,cAAc,EAAEkB,aADJ;AAEZnB,QAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASE,SAFV;AAGZpB,QAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cAAX,GAA4B,GAA5B,GAAkCqB;AAHtC,OAAd,EAFmC,CAOnC;AACD,KARM,MAQA;AACL,WAAKF,QAAL,CAAc;AACZlB,QAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,GAA2BgB,CAAC,CAACC,MAAF,CAASE,SADvC;AAEZjB,QAAAA,cAAc,EACZ,KAAKL,KAAL,CAAWK,cAAX,KAA8B,GAA9B,IACE5B,aAAa,CAAC6B,IAAd,CAAmB,KAAKN,KAAL,CAAWK,cAA9B,CADF,GAEEc,CAAC,CAACC,MAAF,CAASE,SAFX,GAEuB,KAAKtB,KAAL,CAAWK,cAAX,GAA4Bc,CAAC,CAACC,MAAF,CAASE,SALlD;AAMZpB,QAAAA,cAAc,EACZ,KAAKF,KAAL,CAAWK,cAAX,KAA8B,GAA9B,IAAqCc,CAAC,CAACC,MAAF,CAASE,SAAT,KAAuB,GAA5D,GACE,KAAKtB,KAAL,CAAWE,cADb,GAEE,cAAcI,IAAd,CAAmB,KAAKN,KAAL,CAAWE,cAA9B,IACE,KAAKF,KAAL,CAAWE,cAAX,CAA0BsB,KAA1B,CAAgC,CAAhC,EAAmC,CAAC,CAApC,IAAyCL,CAAC,CAACC,MAAF,CAASE,SADpD,GAEE,KAAKtB,KAAL,CAAWE,cAAX,GAA4BiB,CAAC,CAACC,MAAF,CAASE;AAX/B,OAAd;AAaD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB,KAAKzB,KAAL,CAAWG,aAD7B,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,sBAGmB,KAAKH,KAAL,CAAWK,cAH9B,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,sBAKmB,KAAKL,KAAL,CAAWE,cAL9B,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,YAOS,KAAKF,KAAL,CAAWM,IAPpB,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAWE,oBAAC,cAAD;AAAgB,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWE,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWK,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWb,QAA9B;AAAwC,MAAA,KAAK,EAAE,KAAKoB,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAkBD;;AAtGsC;;AAyGzC,MAAMN,YAAY,GAAG,CACnB;AACEV,EAAAA,QAAQ,EAAE,IADZ;AAEEC,EAAAA,OAAO,EAAE,IAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CADmB,EAMnB;AACEC,EAAAA,QAAQ,EAAE,QADZ;AAEEC,EAAAA,OAAO,EAAE,GAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CANmB,EAWnB;AACEC,EAAAA,QAAQ,EAAE,QADZ;AAEEC,EAAAA,OAAO,EAAE,GAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAXmB,EAgBnB;AACEC,EAAAA,QAAQ,EAAE,GADZ;AAEEC,EAAAA,OAAO,EAAE,GAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAhBmB,EAqBnB;AACEC,EAAAA,QAAQ,EAAE,GADZ;AAEEC,EAAAA,OAAO,EAAE,GAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CArBmB,EA0BnB;AACEC,EAAAA,QAAQ,EAAE,GADZ;AAEEC,EAAAA,OAAO,EAAE,GAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CA1BmB,EA+BnB;AACEC,EAAAA,QAAQ,EAAE,GADZ;AAEEC,EAAAA,OAAO,EAAE,GAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CA/BmB,EAoCnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CApCmB,EAyCnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAzCmB,EA8CnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CA9CmB,EAmDnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAnDmB,EAwDnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAxDmB,EA6DnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CA7DmB,EAkEnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAlEmB,EAuEnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAvEmB,EA4EnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CA5EmB,EAiFnB;AACEC,EAAAA,QAAQ,EAAE,CADZ;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEF,EAAAA,EAAE,EAAE;AAHN,CAjFmB,CAArB;AAwFA,eAAeO,UAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n//const regexNumbers = /\\d+/g;\nconst regexOperator = /[+\\-*=]/g;\nconst regexNumberOperator = /((\\d*\\.\\d+)|(\\d+)|([+\\-*/()]))/g;\n//const regexLeadingZero = /^0+/g;\nconst regexEndsWithOperator = /[x+â€‘/]$/;\n\nconst KeyPad = props => {\n  return (\n    <div id={props.idValue} className=\"key-pad\" onClick={props.click}>\n      {props.displayValue}\n    </div>\n  );\n};\n\nconst KeyBank = props => {\n  const calcButtons = props.calckeys.map(k => (\n    <KeyPad key={k.id}\n      operatorValue={k.operator}\n      displayValue={k.display}\n      idValue={k.id}\n      click={props.click}\n    />\n  ));\n  return <div className=\"pad-bank\">{calcButtons}</div>;\n};\n\nconst DisplayFormula = props => {\n  return <div id=\"displayFormula\">{props.showFormula}</div>;\n};\n\nconst DisplayResult = props => {\n  return <div id=\"display\">{props.showResult}</div>;\n};\n\n\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calckeys: calcElements,\n      displayFormula: \"\",\n      displayResult: \"0\",\n      prevClicked: \"0\",\n      currentClicked: \"0\",\n      test: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.calculate = this.calculate.bind(this);\n  }\n\n  calculate(mathProblem) {\n    console.log(\"mathProblem \" + mathProblem);\n    //const regexNumbers = /\\d+/g;\n    //const regexOperator = /\\+|-|\\*|\\/|=/g;\n\n    const numberOperaterArray = mathProblem.match(regexNumberOperator);\n    console.log(numberOperaterArray);\n\n    //const divideOperator = numberOperaterArray.indexOf(\"/\");\n    //const multiplyOperator = numberOperaterArray.indexOf(\"*\");\n    //const plusOperator = numberOperaterArray.indexOf(\"+\");\n    //const subtractOperator = numberOperaterArray.indexOf(\"-\");\n\n    // eslint-disable-next-line\n    let answer = Math.round(1000000000000 * eval(mathProblem)) / 1000000000000;\n    console.log(answer, this.state.displayResult);\n    return answer;\n  }\n\n  handleClick(e) {\n    //--------------CLEAR-----------------------\n    if (e.target.id === \"clear\") {\n      this.setState({\n        displayFormula: \"\",\n        displayResult: \"0\",\n        prevClicked: \"0\",\n        currentClicked: \"0\",\n        test: \"CLEAR\"\n      });\n      //-------------DECIMAL------------------------\n    } else if (e.target.id === \"decimal\") {\n      if (regexEndsWithOperator.test(this.state.displayResult)) {\n        this.setState({\n          prevClicked: 0,\n          displayResult: this.state.displayResult + \"0.\" + e.target.innerText\n        });\n      } else {\n        this.setState({\n          prevClicked: e.target.innerText,\n          displayResult: this.state.displayResult + \"0.\" + e.target.innerText\n        });\n      }\n      //------------EQUALS-------------------------\n    } else if (e.target.id === \"equals\") {\n      var problemResult = this.calculate(this.state.displayFormula);\n      this.setState({\n        currentClicked: problemResult,\n        prevClicked: e.target.innerText,\n        displayFormula: this.state.displayFormula + \"=\" + problemResult\n      });\n      //--------------NUMBERS-----------------------\n    } else {\n      this.setState({\n        displayResult: this.state.displayResult + e.target.innerText,\n        currentClicked:\n          this.state.currentClicked === '0' ||\n            regexOperator.test(this.state.currentClicked) ?\n            e.target.innerText : this.state.currentClicked + e.target.innerText,\n        displayFormula:\n          this.state.currentClicked === '0' && e.target.innerText === '0' ?\n            this.state.displayFormula :\n            /([^.0-9]0)$/.test(this.state.displayFormula) ?\n              this.state.displayFormula.slice(0, -1) + e.target.innerText :\n              this.state.displayFormula + e.target.innerText,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"app-container\">\n        <div>\n          displayResult: {this.state.displayResult}\n          <br />\n          currentClicked: {this.state.currentClicked}\n          <br />\n          DisplayFormula: {this.state.displayFormula}\n          <br />\n          test: {this.state.test}\n        </div>\n        <h1>Calculator</h1>\n        <DisplayFormula showFormula={this.state.displayFormula} />\n        <DisplayResult showResult={this.state.currentClicked} />\n        <KeyBank calckeys={this.state.calckeys} click={this.handleClick} />\n\n      </div>\n    );\n  }\n}\n\nconst calcElements = [\n  {\n    operator: \"AC\",\n    display: \"AC\",\n    id: \"clear\"\n  },\n  {\n    operator: \"\\u00F7\",\n    display: \"/\",\n    id: \"divide\"\n  },\n  {\n    operator: \"\\u00d7\",\n    display: \"*\",\n    id: \"multiply\"\n  },\n  {\n    operator: \"-\",\n    display: \"-\",\n    id: \"subtract\"\n  },\n  {\n    operator: \"+\",\n    display: \"+\",\n    id: \"add\"\n  },\n  {\n    operator: \"=\",\n    display: \"=\",\n    id: \"equals\"\n  },\n  {\n    operator: \".\",\n    display: \".\",\n    id: \"decimal\"\n  },\n  {\n    operator: 0,\n    display: 0,\n    id: \"zero\"\n  },\n  {\n    operator: 1,\n    display: 1,\n    id: \"one\"\n  },\n  {\n    operator: 2,\n    display: 2,\n    id: \"two\"\n  },\n  {\n    operator: 3,\n    display: 3,\n    id: \"three\"\n  },\n  {\n    operator: 4,\n    display: 4,\n    id: \"four\"\n  },\n  {\n    operator: 5,\n    display: 5,\n    id: \"five\"\n  },\n  {\n    operator: 6,\n    display: 6,\n    id: \"six\"\n  },\n  {\n    operator: 7,\n    display: 7,\n    id: \"seven\"\n  },\n  {\n    operator: 8,\n    display: 8,\n    id: \"eight\"\n  },\n  {\n    operator: 9,\n    display: 9,\n    id: \"nine\"\n  }\n];\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}